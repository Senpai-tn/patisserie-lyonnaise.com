{"version":3,"sources":["Components/Footer/index.jsx","firebase.js","Redux/actions.js","Pages/SignIn/index.js","Pages/Dashboard/Categories/CategoryForm.jsx","Pages/Dashboard/Categories/ListCategories.jsx","Pages/Dashboard/Categories/index.jsx","Components/AppBar/index.jsx","Pages/Dashboard/Products/ListProducts.jsx","Pages/Dashboard/Products/ProductForm.jsx","Pages/Dashboard/Products/index.jsx","Pages/Dashboard/Commandes/ListCommandes.jsx","Pages/Dashboard/Commandes/index.jsx","Pages/Dashboard/Fabrication/ListCommandesPerProduct.jsx","Pages/Dashboard/Fabrication/index.jsx","Navigation.js","App.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["index","props","React","createElement","Typography","Object","assign","variant","color","align","Link","target","href","Date","getFullYear","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","storage","getStorage","actionsList","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","SignIn","_React$useState","_React$useState2","_slicedToArray","checked","setChecked","dispatch","useDispatch","navigate","useNavigate","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","onSubmit","event","preventDefault","data","FormData","currentTarget","signInWithEmailAndPassword","get","_ref","_asyncToGenerator","_callee","docRef","docSnap","_context","doc","user","uid","getDoc","localStorage","setItem","JSON","stringify","alert","_x","apply","arguments","code","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","onChange","Button","mb","Footer","style","position","top","left","transform","width","border","boxShadow","p","CategoryForm","open","handleClose","category","categoryList","setCategoryList","_useForm","useForm","defaultValues","handleSubmit","_ref2","collectionRef","payload","_docRef","collection","addDoc","concat","_toConsumableArray","deletedAt","setDoc","_objectSpread","map","console","log","useEffect","Modal","onClose","aria-labelledby","aria-describedby","Controller","rules","message","render","_ref3","_ref3$field","field","fieldState","helperText","ListCategories","rows","onEdit","onDelete","rowSelectionModel","setRowSelectionModel","columns","headerName","renderCell","params","row","dayjs","unix","format","onClick","Stack","direction","spacing","DataGrid","getRowId","initialState","columnVisibilityModel","pagination","paginationModel","page","pageSize","onRowSelectionModelChange","newRowSelectionModel","pageSizeOptions","checkboxSelection","disableRowSelectionOnClick","Categories","_useState","useState","_useState2","_useState3","_useState4","setCategory","_useState5","_useState6","setOpen","_useState7","_useState8","setType","_useState9","_useState10","getCategories","useSelector","querySnapshots","getDocs","docs","c","Backdrop","zIndex","theme","drawer","CircularProgress","disabled","filter","categories","restore","all","_callee3","_context3","setTimeout","includes","_x2","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","_callee2","_context2","isConfirmed","pages","link","role","settings","AppBarComp","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","AppBar","Toolbar","disableGutters","src","height","cursor","flexGrow","xs","md","IconButton","size","aria-label","aria-controls","aria-haspopup","MenuIcon","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","email","MenuItem","textAlign","AdbIcon","mr","noWrap","fontFamily","fontWeight","letterSpacing","textDecoration","my","Tooltip","alt","setting","ListProducts","borderRadius","image","ProductForm","productProps","productList","setProductList","setCategories","selectedImage","setSelectedImage","price","imageURL","storageRef","product","ref","toISOString","t0","uploadBytes","_ref4","snapshot","getDownloadURL","downloadURL","_ref5","_ref5$field","_ref6","_ref6$field","Autocomplete","includeInputInList","options","getOptionLabel","option","defaultValue","item","isOptionEqualToValue","renderInput","placeholder","_ref7","_ref7$field","accept","files","onImageChange","_ref8","_ref8$field","Products","setProduct","getProducts","x","products","_callee4","_context4","_x3","Row","somme","TableRow","& > *","borderBottom","TableCell","KeyboardArrowUpIcon","KeyboardArrowDownIcon","scope","nameSociete","address","phone","date","list","replace","itemsToSold","toFixed","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","Table","TableHead","TableBody","produit","ListCommandes","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","TableContainer","Paper","Commandes","getCommandes","Fragment","ListCommandesPerProduct","commandeList","watch","setValue","nbCommandeProduct","setNbCommandeProduct","nbCommande","parseInt","LocalizationProvider","dateAdapter","AdapterDayjs","justifyContent","pt","add","_ref2$field","DatePicker","entries","hover","tabIndex","Fabrication","setCommandeList","Navigation","BrowserRouter","Routes","Route","path","element","App","parse","getItem","reducer","action","store","createStore","ReactDOM","createRoot","document","getElementById","Provider","StrictMode"],"mappings":"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","file":"static/js/main.1dace5ad.chunk.js","sourcesContent":["import { Link, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst index = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {'Copyright © '}\r\n      <Link target=\"_blank\" color=\"inherit\" href=\"https://ccconnect.fr\">\r\n        Connect{' '}\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default index\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBGiw5HuXi-Y8t7DcZq4L7wmHPbFFZm6l4',\r\n  authDomain: 'patisserie-lyonnaise.firebaseapp.com',\r\n  projectId: 'patisserie-lyonnaise',\r\n  storageBucket: 'patisserie-lyonnaise.appspot.com',\r\n  messagingSenderId: '746942555129',\r\n  appId: '1:746942555129:web:4797532205d77df878d328',\r\n  measurementId: 'G-WD9YG7H4VT',\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nexport const auth = getAuth(app)\r\nexport const db = getFirestore(app)\r\nexport const storage = getStorage(app)\r\n","const actionsList = {\r\n  auth: 'AUTH',\r\n}\r\n\r\nexport default actionsList\r\n","import * as React from 'react'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport Footer from '../../Components/Footer'\r\nimport { auth, db } from '../../firebase'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport actionsList from '../../Redux/actions'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\n\r\nexport default function SignIn() {\r\n  const [checked, setChecked] = React.useState(true)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const data = new FormData(event.currentTarget)\r\n\r\n    signInWithEmailAndPassword(auth, data.get('email'), data.get('password'))\r\n      .then(async (value) => {\r\n        const docRef = doc(db, 'Users', value.user.uid)\r\n        const docSnap = await getDoc(docRef)\r\n        if (docSnap.data()) {\r\n          dispatch({ type: actionsList.auth, user: docSnap.data() })\r\n          if (checked) {\r\n            localStorage.setItem('user', JSON.stringify(docSnap.data()))\r\n          }\r\n          navigate('/')\r\n        } else alert('user not found')\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === 'auth/wrong-password') alert('wrong-password')\r\n        else if (error.code === 'auth/user-not-found') alert('user not found')\r\n        else if ('auth/too-many-requests') alert('auth/too-many-requests')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            name=\"remember\"\r\n            control={\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={() => {\r\n                  setChecked(!checked)\r\n                }}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Footer sx={{ mt: 8, mb: 4 }} />\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Modal from '@mui/material/Modal'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { Button, TextField } from '@mui/material'\r\nimport { addDoc, collection, doc, getDoc, setDoc } from 'firebase/firestore'\r\nimport { db } from '../../../firebase'\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n}\r\n\r\nexport default function CategoryForm({\r\n  type,\r\n  open,\r\n  handleClose,\r\n  category,\r\n  categoryList,\r\n  setCategoryList,\r\n}) {\r\n  const { control, handleSubmit, reset } = useForm({\r\n    defaultValues: {\r\n      name: type === 'add' ? '' : category.name,\r\n    },\r\n  })\r\n\r\n  const onSubmit = async (data) => {\r\n    if (type === 'add') {\r\n      // Ajout category\r\n      const collectionRef = collection(db, 'category')\r\n      const payload = {\r\n        name: data.name,\r\n      }\r\n      const docRef = await addDoc(collectionRef, payload)\r\n      setCategoryList([\r\n        ...categoryList,\r\n        {\r\n          id: docRef.id,\r\n          data: () => {\r\n            return {\r\n              name: data.name,\r\n              deletedAt: '',\r\n            }\r\n          },\r\n        },\r\n      ])\r\n    } else {\r\n      const docRef = doc(db, 'category', category.id)\r\n      const docSnap = await getDoc(docRef)\r\n      setDoc(docRef, {\r\n        ...docSnap.data(),\r\n        name: data.name || category.name,\r\n        deletedAt: '',\r\n      })\r\n        .then(() => {\r\n          handleClose()\r\n          setCategoryList(\r\n            categoryList.map((p) => {\r\n              return p.id === category.id\r\n                ? {\r\n                    id: category.id,\r\n                    name: data.name || category.name,\r\n                    deletedAt: '',\r\n                  }\r\n                : p\r\n            })\r\n          )\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  // const onSubmit = async (data) => {\r\n  //   const { category, price, name } = data\r\n  //   var imageURL = null\r\n  //   const storageRef = ref(storage, 'image' + dayjs().toISOString())\r\n\r\n  //   selectedImage &&\r\n  //     (await uploadBytes(storageRef, selectedImage).then(async (snapshot) => {\r\n  //       await getDownloadURL(snapshot.ref).then((downloadURL) => {\r\n  //         imageURL = downloadURL\r\n  //       })\r\n  //     }))\r\n\r\n  //   const product = {\r\n  //     name,\r\n  //     price,\r\n  //     image: imageURL,\r\n  //     category: category ? category : null,\r\n  //     deletedAt: '',\r\n  //   }\r\n  //   if (type === 'edit' && productProps) {\r\n  //     //update Doc\r\n  //     const docRef = doc(db, 'product', productProps.id)\r\n  //     const docSnap = await getDoc(docRef)\r\n  //     setDoc(docRef, {\r\n  //       ...docSnap.data(),\r\n  //       name: name || productProps.name,\r\n  //       price: price || productProps.price,\r\n  //       image:\r\n  //         selectedImage && imageURL !== null ? imageURL : productProps.image,\r\n  //       category: category ? { ...category } : null,\r\n  //       deletedAt: '',\r\n  //     })\r\n  //       .then(() => {\r\n  //         handleClose()\r\n  //         setProductList(\r\n  //           productList.map((p) => {\r\n  //             return p.id === productProps.id\r\n  //               ? {\r\n  //                   id: productProps.id,\r\n  //                   name: name || productProps.name,\r\n  //                   price: price || productProps.price,\r\n  //                   image:\r\n  //                     selectedImage && imageURL !== null\r\n  //                       ? imageURL\r\n  //                       : productProps.image,\r\n  //                   category: category ? { ...category } : null,\r\n  //                   deletedAt: '',\r\n  //                 }\r\n  //               : p\r\n  //           })\r\n  //         )\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error)\r\n  //       })\r\n  //   } else {\r\n  //     const collectionRef = collection(db, 'product')\r\n  //     await addDoc(collectionRef, product)\r\n  //       .then((docRef) => {\r\n  //         setProductList([\r\n  //           {\r\n  //             id: docRef.id,\r\n  //             name,\r\n  //             price,\r\n  //             image: imageURL,\r\n  //             category: category ? category : null,\r\n  //             deletedAt: '',\r\n  //           },\r\n  //           ...productList,\r\n  //         ])\r\n  //         handleClose()\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log('Error : ' + error.message)\r\n  //       })\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    console.log(type, category)\r\n    reset({ name: type === 'edit' && category !== {} ? category.name : '' })\r\n  }, [category, type])\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            control={control}\r\n            name=\"name\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: 'Nom est un champs obligatoire',\r\n              },\r\n            }}\r\n            render={({ field: { value, onChange }, fieldState: { error } }) => (\r\n              <TextField\r\n                value={value}\r\n                onChange={onChange}\r\n                label={'Nom du Catégorie'}\r\n                error={!!error}\r\n                helperText={error && error.message}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {type === 'add' ? (\r\n            <Button type=\"submit\" color=\"success\">\r\n              Ajouter\r\n            </Button>\r\n          ) : (\r\n            <Button type=\"submit\" color=\"warning\">\r\n              Modifier\r\n            </Button>\r\n          )}\r\n        </form>\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport { Button, Stack } from '@mui/material'\r\nimport dayjs from 'dayjs'\r\n\r\nexport default function ListCategories({\r\n  rows,\r\n  onEdit,\r\n  onDelete,\r\n  rowSelectionModel,\r\n  setRowSelectionModel,\r\n}) {\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Nom',\r\n      width: 400,\r\n    },\r\n    {\r\n      field: 'deletedAt',\r\n      headerName: 'Supprimé',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return params.row.deletedAt\r\n          ? dayjs.unix(params.row.deletedAt).format('HH:mm DD-MM-YYYY')\r\n          : null\r\n      },\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return !params.row.deletedAt ? (\r\n          <Stack direction={'row'} spacing={5}>\r\n            <Button color=\"warning\" onClick={() => onEdit(params.row)}>\r\n              Modifier\r\n            </Button>\r\n            <Button\r\n              color=\"error\"\r\n              onClick={() => {\r\n                onDelete(params.row)\r\n              }}\r\n            >\r\n              Supprimer\r\n            </Button>\r\n          </Stack>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              onDelete(params.row, true)\r\n            }}\r\n          >\r\n            Restorer\r\n          </Button>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n  return (\r\n    <DataGrid\r\n      rows={rows}\r\n      columns={columns}\r\n      getRowId={(row) => row.id}\r\n      initialState={{\r\n        columns: { columnVisibilityModel: { id: false } },\r\n        pagination: {\r\n          paginationModel: { page: 0, pageSize: 10 },\r\n        },\r\n      }}\r\n      onRowSelectionModelChange={(newRowSelectionModel) => {\r\n        setRowSelectionModel(newRowSelectionModel)\r\n        console.log(newRowSelectionModel)\r\n      }}\r\n      rowSelectionModel={rowSelectionModel}\r\n      pageSizeOptions={[10, 20, 100]}\r\n      checkboxSelection\r\n      disableRowSelectionOnClick\r\n    />\r\n  )\r\n}\r\n","import {\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  Stack,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { collection, getDocs, doc, getDoc, setDoc } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { db } from '../../../firebase'\r\nimport CategoryForm from './CategoryForm'\r\nimport ListCategories from './ListCategories'\r\nimport { useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport dayjs from 'dayjs'\r\n\r\nconst Categories = () => {\r\n  const [categoryList, setCategoryList] = useState([])\r\n  const [category, setCategory] = useState({})\r\n  const [open, setOpen] = useState(false)\r\n  const [type, setType] = useState('add')\r\n  const [rowSelectionModel, setRowSelectionModel] = useState([])\r\n  const user = useSelector((state) => state.user)\r\n  const getCategories = async () => {\r\n    //  get list of category\r\n    const querySnapshots = await getDocs(collection(db, 'category'))\r\n    setCategoryList(\r\n      querySnapshots.docs.map((c) => {\r\n        return { id: c.id, ...c.data() }\r\n      })\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  const onEdit = (category) => {\r\n    setCategory(category)\r\n    setType('edit')\r\n    setOpen(true)\r\n  }\r\n\r\n  const deleteCategory = (category, restore) => {\r\n    Swal.fire({\r\n      title: 'Etes vous sure ?',\r\n      text: restore\r\n        ? 'Voulez vous restorer cette catégorie ?'\r\n        : `Vous ne pouvez pas faire retour de cette catégorie : ${category.name}`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: restore ? 'Oui, Restore le!' : 'Oui, Supprime le!',\r\n      cancelButtonText: 'Annuler',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const docRef = doc(db, 'category', category.id)\r\n        const docSnap = await getDoc(docRef)\r\n        setDoc(docRef, {\r\n          ...docSnap.data(),\r\n          deletedAt: restore ? null : dayjs().unix() + '',\r\n        })\r\n          .then(() => {\r\n            setRowSelectionModel([])\r\n            setCategoryList(\r\n              categoryList.map((p) => {\r\n                return p.id === category.id\r\n                  ? {\r\n                      ...category,\r\n                      deletedAt: restore ? null : dayjs().unix() + '',\r\n                    }\r\n                  : p\r\n              })\r\n            )\r\n            Swal.fire(\r\n              restore ? 'Restoré' : 'Supprimé!',\r\n              `La catégorie ${category.name} a été ${\r\n                restore ? 'restorée' : 'supprimée'\r\n              }`,\r\n              'success'\r\n            )\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteMultipleCategories = (categories, restore) => {\r\n    Promise.all(\r\n      categories.map(async (id) => {\r\n        const docRef = doc(db, 'category', id)\r\n        const docSnap = await getDoc(docRef)\r\n        setDoc(docRef, {\r\n          ...docSnap.data(),\r\n          deletedAt: restore ? null : dayjs().unix() + '',\r\n        })\r\n          .then(() => {\r\n            setTimeout(() => {\r\n              setRowSelectionModel([])\r\n              setCategoryList(\r\n                categoryList.map((p) => {\r\n                  return categories.includes(p.id)\r\n                    ? {\r\n                        ...p,\r\n                        deletedAt: restore ? null : dayjs().unix() + '',\r\n                      }\r\n                    : p\r\n                })\r\n              )\r\n            }, 500)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      })\r\n    ).then(() => {\r\n      restore\r\n        ? Swal.fire('Restorés!', `Tous les produits sont supprimés`, 'success')\r\n        : Swal.fire('Supprimé!', `Tous les produits sont supprimés`, 'success')\r\n    })\r\n  }\r\n  return (\r\n    <Stack p={'20px 50px'}>\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={categoryList.length === 0}\r\n      >\r\n        <CircularProgress color=\"success\" />\r\n      </Backdrop>\r\n      <CategoryForm\r\n        open={open}\r\n        type={type}\r\n        handleClose={() => {\r\n          setOpen(false)\r\n        }}\r\n        category={category}\r\n        categoryList={categoryList}\r\n        setCategoryList={setCategoryList}\r\n      />\r\n\r\n      <Stack direction={'row'} spacing={2}>\r\n        <Button\r\n          onClick={() => {\r\n            setType('add')\r\n            setOpen(true)\r\n            setRowSelectionModel([])\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          Ajouter Catégorie\r\n        </Button>\r\n\r\n        <Button\r\n          disabled={rowSelectionModel.length === 0}\r\n          variant=\"contained\"\r\n          color={\r\n            categoryList.filter((p) => {\r\n              return p.deletedAt\r\n            }).length === categoryList.length\r\n              ? 'primary'\r\n              : 'error'\r\n          }\r\n          onClick={() => {\r\n            deleteMultipleCategories(\r\n              rowSelectionModel,\r\n              categoryList.filter((p) => {\r\n                return p.deletedAt\r\n              }).length === categoryList.length\r\n            )\r\n          }}\r\n        >\r\n          {categoryList.filter((p) => {\r\n            return p.deletedAt\r\n          }).length === categoryList.length\r\n            ? 'Restorer les catégories'\r\n            : 'Supprimer les catégories sélectionnées'}\r\n        </Button>\r\n      </Stack>\r\n\r\n      <ListCategories\r\n        onEdit={onEdit}\r\n        onDelete={deleteCategory}\r\n        rowSelectionModel={rowSelectionModel}\r\n        setRowSelectionModel={setRowSelectionModel}\r\n        rows={categoryList}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Categories\r\n","import * as React from 'react'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Box from '@mui/material/Box'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport Container from '@mui/material/Container'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport AdbIcon from '@mui/icons-material/Adb'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport actionsList from '../../Redux/actions'\r\n\r\nconst pages = [\r\n  { text: 'Commandes', link: '/', role: ['f', 'ad'] },\r\n  { text: 'Produits', link: '/produits', role: ['ad'] },\r\n  { text: 'Catégories', link: '/categories', role: ['ad'] },\r\n  { text: 'Fabrication', link: '/fabrication', role: ['pa', 'ad'] },\r\n]\r\nconst settings = [{ text: 'Déconnecter', link: '/logout' }]\r\n\r\nfunction AppBarComp() {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null)\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null)\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state) => state.user)\r\n  const navigate = useNavigate()\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget)\r\n  }\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget)\r\n  }\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null)\r\n  }\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null)\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <img\r\n            src=\"./logo.png\"\r\n            width={'100px'}\r\n            height={'60px'}\r\n            onClick={() => navigate('/')}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map(\r\n                (page) =>\r\n                  user &&\r\n                  (user.email === 'khaledd.sahli@gmail.com' ? (\r\n                    <MenuItem\r\n                      key={page}\r\n                      onClick={() => {\r\n                        handleCloseNavMenu()\r\n                        navigate(page.link)\r\n                      }}\r\n                    >\r\n                      <Typography textAlign=\"center\">{page.text}</Typography>\r\n                    </MenuItem>\r\n                  ) : user.email === 'patisier@gmail.com' &&\r\n                    page.role.includes('pa') ? (\r\n                    <MenuItem\r\n                      key={page}\r\n                      onClick={() => {\r\n                        handleCloseNavMenu()\r\n                        navigate(page.link)\r\n                      }}\r\n                    >\r\n                      <Typography textAlign=\"center\">\r\n                        {page.text} {page.role}\r\n                      </Typography>\r\n                    </MenuItem>\r\n                  ) : null)\r\n              )}\r\n            </Menu>\r\n          </Box>\r\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map(\r\n              (page) =>\r\n                user &&\r\n                (user.email === 'khaledd.sahli@gmail.com' ? (\r\n                  <Button\r\n                    key={page.text}\r\n                    onClick={() => {\r\n                      handleCloseNavMenu()\r\n                      navigate(page.link)\r\n                    }}\r\n                    sx={{ my: 2, color: 'white', display: 'block' }}\r\n                  >\r\n                    {page.text}\r\n                  </Button>\r\n                ) : user.email === 'patisier@gmail.com' &&\r\n                  page.role.includes('pa') ? (\r\n                  <Button\r\n                    key={page.text}\r\n                    onClick={() => {\r\n                      handleCloseNavMenu()\r\n                      navigate(page.link)\r\n                    }}\r\n                    sx={{ my: 2, color: 'white', display: 'block' }}\r\n                  >\r\n                    {page.text}\r\n                  </Button>\r\n                ) : null)\r\n            )}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar\r\n                  alt={user ? user.email : ''}\r\n                  src=\"/static/images/avatar/2.jpg\"\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      if (setting.link === '/logout') {\r\n                        localStorage.setItem('user', null)\r\n                        dispatch({ type: actionsList.auth, user: null })\r\n                      }\r\n                    }}\r\n                  >\r\n                    {setting.text}\r\n                  </Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default AppBarComp\r\n","import * as React from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport { Button, Stack } from '@mui/material'\r\nimport dayjs from 'dayjs'\r\n\r\nexport default function ListProducts({\r\n  rows,\r\n  onEdit,\r\n  onDelete,\r\n  rowSelectionModel,\r\n  setRowSelectionModel,\r\n}) {\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    {\r\n      field: 'image',\r\n      headerName: 'Image',\r\n      width: 70,\r\n      renderCell: (params) => {\r\n        return (\r\n          <img\r\n            style={{ borderRadius: '50%' }}\r\n            height={'57px'}\r\n            width={'57px'}\r\n            src={params.row.image}\r\n          />\r\n        )\r\n      },\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Nom',\r\n      width: 400,\r\n    },\r\n    {\r\n      field: 'category',\r\n      headerName: 'Catégorie',\r\n\r\n      renderCell: (params) => {\r\n        return params.row.category !== undefined && params.row.category !== null\r\n          ? params.row.category.name\r\n          : ''\r\n      },\r\n    },\r\n    { field: 'price', headerName: 'Prix' },\r\n    {\r\n      field: 'deletedAt',\r\n      headerName: 'Supprimé',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return params.row.deletedAt\r\n          ? dayjs.unix(params.row.deletedAt).format('HH:mm DD-MM-YYYY')\r\n          : null\r\n      },\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Stack direction={'row'} spacing={5}>\r\n            {!params.row.deletedAt ? (\r\n              <>\r\n                <Button\r\n                  color=\"warning\"\r\n                  onClick={() => {\r\n                    onEdit(params.row)\r\n                  }}\r\n                >\r\n                  Modifier\r\n                </Button>\r\n                <Button\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    onDelete(params.row)\r\n                  }}\r\n                >\r\n                  Supprimer\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button\r\n                onClick={() => {\r\n                  onDelete(params.row, true)\r\n                }}\r\n              >\r\n                Restorer\r\n              </Button>\r\n            )}\r\n          </Stack>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  React.useEffect(() => {\r\n    console.log('rows => ', rows)\r\n  }, [rows])\r\n\r\n  return (\r\n    <DataGrid\r\n      rows={rows}\r\n      columns={columns}\r\n      getRowId={(row) => row.id}\r\n      initialState={{\r\n        columns: { columnVisibilityModel: { id: false } },\r\n        pagination: {\r\n          paginationModel: { page: 0, pageSize: 10 },\r\n        },\r\n      }}\r\n      onRowSelectionModelChange={(newRowSelectionModel) => {\r\n        setRowSelectionModel(newRowSelectionModel)\r\n        console.log(newRowSelectionModel)\r\n      }}\r\n      rowSelectionModel={rowSelectionModel}\r\n      pageSizeOptions={[10, 20, 100]}\r\n      checkboxSelection\r\n      disableRowSelectionOnClick\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Modal from '@mui/material/Modal'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { Button, Autocomplete, TextField, Stack } from '@mui/material'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n} from 'firebase/firestore'\r\nimport { db, storage } from '../../../firebase'\r\nimport { getDownloadURL, ref, uploadBytes } from 'firebase/storage'\r\nimport dayjs from 'dayjs'\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n}\r\n\r\nexport default function ProductForm({\r\n  type,\r\n  open,\r\n  handleClose,\r\n  productProps,\r\n  productList,\r\n  setProductList,\r\n}) {\r\n  const [categories, setCategories] = useState([])\r\n  const [selectedImage, setSelectedImage] = useState(null)\r\n\r\n  const onImageChange = (event) => {\r\n    setSelectedImage(event.target.files[0])\r\n  }\r\n  const getCategories = async () => {\r\n    //  get list of category\r\n    const querySnapshots = await getDocs(collection(db, 'category'))\r\n    setCategories(\r\n      querySnapshots.docs.map((c) => {\r\n        return { id: c.id, ...c.data() }\r\n      })\r\n    )\r\n    console.log(querySnapshots.docs)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n  const { control, handleSubmit, reset } = useForm({\r\n    defaultValues: {\r\n      name: type === 'add' ? '' : productProps.name,\r\n      price: type === 'add' ? '' : productProps.price,\r\n    },\r\n  })\r\n\r\n  const onSubmit = async (data) => {\r\n    const { category, price, name } = data\r\n    var imageURL = null\r\n    const storageRef = ref(storage, 'image' + dayjs().toISOString())\r\n\r\n    selectedImage &&\r\n      (await uploadBytes(storageRef, selectedImage).then(async (snapshot) => {\r\n        await getDownloadURL(snapshot.ref).then((downloadURL) => {\r\n          imageURL = downloadURL\r\n        })\r\n      }))\r\n\r\n    const product = {\r\n      name,\r\n      price,\r\n      image: imageURL,\r\n      category: category ? category : null,\r\n      deletedAt: '',\r\n    }\r\n    if (type === 'edit' && productProps) {\r\n      //update Doc\r\n      const docRef = doc(db, 'product', productProps.id)\r\n      const docSnap = await getDoc(docRef)\r\n      setDoc(docRef, {\r\n        ...docSnap.data(),\r\n        name: name || productProps.name,\r\n        price: price || productProps.price,\r\n        image:\r\n          selectedImage && imageURL !== null ? imageURL : productProps.image,\r\n        category: category ? { ...category } : null,\r\n        deletedAt: '',\r\n      })\r\n        .then(() => {\r\n          handleClose()\r\n          setProductList(\r\n            productList.map((p) => {\r\n              return p.id === productProps.id\r\n                ? {\r\n                    id: productProps.id,\r\n                    name: name || productProps.name,\r\n                    price: price || productProps.price,\r\n                    image:\r\n                      selectedImage && imageURL !== null\r\n                        ? imageURL\r\n                        : productProps.image,\r\n                    category: category ? { ...category } : null,\r\n                    deletedAt: '',\r\n                  }\r\n                : p\r\n            })\r\n          )\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    } else {\r\n      const collectionRef = collection(db, 'product')\r\n      await addDoc(collectionRef, product)\r\n        .then((docRef) => {\r\n          setProductList([\r\n            {\r\n              id: docRef.id,\r\n              name,\r\n              price,\r\n              image: imageURL,\r\n              category: category ? category : null,\r\n              deletedAt: '',\r\n            },\r\n            ...productList,\r\n          ])\r\n          handleClose()\r\n        })\r\n        .catch((error) => {\r\n          console.log('Error : ' + error.message)\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    reset({\r\n      name: type === 'edit' && productProps !== {} ? productProps.name : '',\r\n      price: type === 'edit' && productProps !== {} ? productProps.price : '',\r\n      category:\r\n        type === 'edit' && productProps !== {} ? productProps.category : '',\r\n    })\r\n  }, [productProps, type])\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Stack>\r\n            <Controller\r\n              control={control}\r\n              name=\"name\"\r\n              render={({\r\n                field: { value, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <TextField\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error && error.message}\r\n                  label={'Nom'}\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              name=\"category\"\r\n              control={control}\r\n              render={({\r\n                field: { value, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <Autocomplete\r\n                  fullWidth\r\n                  includeInputInList\r\n                  id=\"tags-standard\"\r\n                  options={categories.filter((c) => {\r\n                    return !c.deletedAt\r\n                  })}\r\n                  getOptionLabel={(option) => option.name || ''}\r\n                  defaultValue={[]}\r\n                  onChange={(event, item) => {\r\n                    onChange(item)\r\n                  }}\r\n                  isOptionEqualToValue={(option, value) => option === value}\r\n                  value={value}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"standard\"\r\n                      label=\"Catégorie\"\r\n                      placeholder=\"Favorites\"\r\n                    />\r\n                  )}\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              name=\"image\"\r\n              control={control}\r\n              render={({\r\n                field: { value, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <input\r\n                  accept=\"image/png, image/gif, image/jpeg\"\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                  value={value}\r\n                  onChange={(event) => onImageChange(event)}\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              name=\"price\"\r\n              control={control}\r\n              render={({\r\n                field: { value, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <TextField\r\n                  label={'Prix'}\r\n                  type=\"number\"\r\n                  value={value}\r\n                  onChange={onChange}\r\n                />\r\n              )}\r\n            />\r\n            {type === 'add' ? (\r\n              <Button type=\"submit\" color=\"success\">\r\n                Ajouter\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\" color=\"warning\">\r\n                Modifier\r\n              </Button>\r\n            )}\r\n          </Stack>\r\n        </form>\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Backdrop, Button, CircularProgress, Stack } from '@mui/material'\r\nimport { collection, doc, getDoc, getDocs, setDoc } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { db } from '../../../firebase'\r\nimport ListProducts from './ListProducts'\r\nimport ProductForm from './ProductForm'\r\nimport { useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport dayjs from 'dayjs'\r\n\r\nconst Products = () => {\r\n  const [productList, setProductList] = useState([])\r\n  const [product, setProduct] = useState({})\r\n  const [open, setOpen] = useState(false)\r\n  const [type, setType] = useState('add')\r\n  const [rowSelectionModel, setRowSelectionModel] = useState([])\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const getProducts = async () => {\r\n    //  get list of category\r\n    const querySnapshots = await getDocs(collection(db, 'product'))\r\n    const x = await Promise.all(\r\n      querySnapshots.docs.map(async (p) => {\r\n        if (p.data().category !== undefined && p.data().category !== null) {\r\n          const docRef = doc(db, 'category', p.data().category.id)\r\n          const docSnap = await getDoc(docRef)\r\n          return {\r\n            id: p.id,\r\n            ...p.data(),\r\n            category: { id: docSnap.id, ...docSnap.data() },\r\n          }\r\n        } else return { id: p.id, ...p.data() }\r\n      })\r\n    )\r\n    setProductList(x)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  const onEdit = (product) => {\r\n    setProduct({ ...product })\r\n    setType('edit')\r\n    setOpen(true)\r\n  }\r\n\r\n  const deleteProduct = (product, restore) => {\r\n    Swal.fire({\r\n      title: 'Etes vous sure ?',\r\n      text: restore\r\n        ? 'Voulez vous restorer ce produit ?'\r\n        : `Vous ne pouvez pas faire retour de ce produit : ${product.name}`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: restore ? 'Oui, Restore le!' : 'Oui, Supprime le!',\r\n      cancelButtonText: 'Annuler',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const docRef = doc(db, 'product', product.id)\r\n        const docSnap = await getDoc(docRef)\r\n        setDoc(docRef, {\r\n          ...docSnap.data(),\r\n          deletedAt: restore ? null : dayjs().unix() + '',\r\n        })\r\n          .then(() => {\r\n            setRowSelectionModel([])\r\n            setProductList(\r\n              productList.map((p) => {\r\n                return p.id === product.id\r\n                  ? {\r\n                      ...product,\r\n                      deletedAt: restore ? null : dayjs().unix() + '',\r\n                    }\r\n                  : p\r\n              })\r\n            )\r\n            Swal.fire(\r\n              restore ? 'Restoré' : 'Supprimé!',\r\n              `Le produit ${product.name} a été ${\r\n                restore ? 'restoré' : 'supprimé'\r\n              }`,\r\n              'success'\r\n            )\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteMultipleProducts = (products, restore) => {\r\n    Promise.all(\r\n      products.map(async (id) => {\r\n        const docRef = doc(db, 'product', id)\r\n        const docSnap = await getDoc(docRef)\r\n        setDoc(docRef, {\r\n          ...docSnap.data(),\r\n          deletedAt: restore ? null : dayjs().unix() + '',\r\n        })\r\n          .then(() => {\r\n            setTimeout(() => {\r\n              setRowSelectionModel([])\r\n              setProductList(\r\n                productList.map((p) => {\r\n                  return products.includes(p.id)\r\n                    ? {\r\n                        ...p,\r\n                        deletedAt: restore ? null : dayjs().unix() + '',\r\n                      }\r\n                    : p\r\n                })\r\n              )\r\n            }, 500)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n      })\r\n    ).then(() => {\r\n      restore\r\n        ? Swal.fire('Restorés!', `Tous les produits sont supprimés`, 'success')\r\n        : Swal.fire('Supprimé!', `Tous les produits sont supprimés`, 'success')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Stack p={'20px 50px'}>\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={productList.length === 0}\r\n      >\r\n        <CircularProgress color=\"success\" />\r\n      </Backdrop>\r\n      <ProductForm\r\n        open={open}\r\n        type={type}\r\n        handleClose={() => {\r\n          setOpen(false)\r\n        }}\r\n        productProps={product}\r\n        productList={productList}\r\n        setProductList={setProductList}\r\n      />\r\n\r\n      <Stack direction={'row'} spacing={2}>\r\n        <Button\r\n          onClick={() => {\r\n            setType('add')\r\n            setOpen(true)\r\n            setRowSelectionModel([])\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          Ajouter Produit\r\n        </Button>\r\n\r\n        <Button\r\n          disabled={rowSelectionModel.length === 0}\r\n          variant=\"contained\"\r\n          color={\r\n            productList.filter((p) => {\r\n              return p.deletedAt\r\n            }).length === productList.length\r\n              ? 'primary'\r\n              : 'error'\r\n          }\r\n          onClick={() => {\r\n            deleteMultipleProducts(\r\n              rowSelectionModel,\r\n              productList.filter((p) => {\r\n                return p.deletedAt\r\n              }).length === productList.length\r\n            )\r\n          }}\r\n        >\r\n          {productList.filter((p) => {\r\n            return p.deletedAt\r\n          }).length === productList.length\r\n            ? 'Restorer les produits'\r\n            : 'Supprimer les produits sélectionnés'}\r\n        </Button>\r\n      </Stack>\r\n      {/* )} */}\r\n\r\n      <ListProducts\r\n        onEdit={onEdit}\r\n        onDelete={deleteProduct}\r\n        rowSelectionModel={rowSelectionModel}\r\n        setRowSelectionModel={setRowSelectionModel}\r\n        rows={productList}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Products\r\n","// import * as React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import Box from '@mui/material/Box'\r\n// import Table from '@mui/material/Table'\r\n// import TableBody from '@mui/material/TableBody'\r\n// import TableCell from '@mui/material/TableCell'\r\n// import TableContainer from '@mui/material/TableContainer'\r\n// import TableHead from '@mui/material/TableHead'\r\n// import TableRow from '@mui/material/TableRow'\r\n// import TableSortLabel from '@mui/material/TableSortLabel'\r\n// import Paper from '@mui/material/Paper'\r\n\r\n// import { visuallyHidden } from '@mui/utils'\r\n// import { Chip, TablePagination } from '@mui/material'\r\n// import dayjs from 'dayjs'\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (orderBy === 'montant') {\r\n//     var sommeA = 0\r\n//     var sommeB = 0\r\n//     a.list.map((item) => {\r\n//       item.price &&\r\n//         (sommeA += item.price.replace('€', '').replace(',', '.') * 1)\r\n//     })\r\n//     b.list.map((item) => {\r\n//       item.price &&\r\n//         (sommeB += item.price.replace('€', '').replace(',', '.') * 1)\r\n//     })\r\n\r\n//     return sommeA > sommeB ? -1 : 1\r\n//   }\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1\r\n//   }\r\n//   return 0\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy)\r\n// }\r\n\r\n// function stableSort(array, comparator) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index])\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0])\r\n//     if (order !== 0) {\r\n//       return order\r\n//     }\r\n//     return a[1] - b[1]\r\n//   })\r\n//   return stabilizedThis.map((el) => el[0])\r\n// }\r\n\r\n// const headCells = [\r\n//   {\r\n//     id: 'nameSociete',\r\n//     numeric: true,\r\n//     disablePadding: true,\r\n//     label: 'Société',\r\n//   },\r\n//   {\r\n//     id: 'list',\r\n//     numeric: false,\r\n//     disablePadding: false,\r\n//     label: 'Produits',\r\n//   },\r\n//   {\r\n//     id: 'date',\r\n//     numeric: false,\r\n//     disablePadding: false,\r\n//     label: 'Date',\r\n//   },\r\n//   {\r\n//     id: 'address',\r\n//     numeric: false,\r\n//     disablePadding: false,\r\n//     label: 'Adresse',\r\n//   },\r\n//   {\r\n//     id: 'montant',\r\n//     numeric: false,\r\n//     disablePadding: false,\r\n//     label: 'Montant',\r\n//   },\r\n// ]\r\n\r\n// function EnhancedTableHead(props) {\r\n//   const {\r\n//     onSelectAllClick,\r\n//     order,\r\n//     orderBy,\r\n//     numSelected,\r\n//     rowCount,\r\n//     onRequestSort,\r\n//   } = props\r\n//   const createSortHandler = (property) => (event) => {\r\n//     onRequestSort(event, property)\r\n//   }\r\n\r\n//   return (\r\n//     <TableHead>\r\n//       <TableRow>\r\n//         {/* <TableCell padding=\"checkbox\">\r\n//            <Checkbox\r\n//             color=\"primary\"\r\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n//             checked={rowCount > 0 && numSelected === rowCount}\r\n//             onChange={onSelectAllClick}\r\n//             inputProps={{\r\n//               'aria-label': 'select all desserts',\r\n//             }}\r\n//           />\r\n//         </TableCell> */}\r\n//         {headCells.map((headCell) => (\r\n//           <TableCell\r\n//             key={headCell.id}\r\n//             align={headCell.numeric ? 'center' : 'left'}\r\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\r\n//             sortDirection={orderBy === headCell.id ? order : false}\r\n//           >\r\n//             <TableSortLabel\r\n//               active={orderBy === headCell.id}\r\n//               direction={orderBy === headCell.id ? order : 'asc'}\r\n//               onClick={createSortHandler(headCell.id)}\r\n//             >\r\n//               {headCell.label}\r\n//               {orderBy === headCell.id ? (\r\n//                 <Box component=\"span\" sx={visuallyHidden}>\r\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n//                 </Box>\r\n//               ) : null}\r\n//             </TableSortLabel>\r\n//           </TableCell>\r\n//         ))}\r\n//       </TableRow>\r\n//     </TableHead>\r\n//   )\r\n// }\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// }\r\n\r\n// export default function ListCommandes({ rows }) {\r\n//   const [order, setOrder] = React.useState('asc')\r\n//   const [orderBy, setOrderBy] = React.useState('nameSociete')\r\n//   const [page, setPage] = React.useState(0)\r\n//   const [dense, setDense] = React.useState(false)\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n//   const [rowsVisible, setRows] = React.useState(rows)\r\n\r\n//   const handleRequestSort = (event, property) => {\r\n//     const isAsc = orderBy === property && order === 'asc'\r\n//     setOrder(isAsc ? 'desc' : 'asc')\r\n//     setOrderBy(property)\r\n//   }\r\n\r\n//   // Avoid a layout jump when reaching the last page with empty rows.\r\n//   const emptyRows =\r\n//     page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0\r\n\r\n//   React.useEffect(() => {\r\n//     setRows(\r\n//       stableSort(rows, getComparator(order, orderBy)).slice(\r\n//         page * rowsPerPage,\r\n//         page * rowsPerPage + rowsPerPage\r\n//       )\r\n//     )\r\n//   }, [order, orderBy, page, rowsPerPage, rows])\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage)\r\n//   }\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10))\r\n//     setPage(0)\r\n//   }\r\n\r\n//   return (\r\n//     <Box sx={{ width: '100%' }}>\r\n//       <Paper sx={{ width: '100%', mb: 2 }}>\r\n//         <TableContainer>\r\n//           <Table\r\n//             sx={{ minWidth: 750 }}\r\n//             aria-labelledby=\"tableTitle\"\r\n//             size={dense ? 'small' : 'medium'}\r\n//           >\r\n//             <EnhancedTableHead\r\n//               order={order}\r\n//               orderBy={orderBy}\r\n//               onRequestSort={handleRequestSort}\r\n//               rowCount={rows.length}\r\n//             />\r\n//             <TableBody>\r\n//               {(rowsVisible || rows).map((row) => {\r\n//                 var somme = 0\r\n//                 return (\r\n//                   <TableRow\r\n//                     hover\r\n//                     role=\"checkbox\"\r\n//                     tabIndex={-1}\r\n//                     key={row.id}\r\n//                     sx={{ cursor: 'pointer' }}\r\n//                   >\r\n//                     <TableCell align=\"center\" width={200}>\r\n//                       {row.nameSociete !== 'null' ? row.nameSociete : ''}\r\n//                     </TableCell>\r\n\r\n//                     <TableCell align=\"left\" width={600}>\r\n//                       {row.list.map((item) => {\r\n//                         return (\r\n//                           <Chip\r\n//                             sx={{ m: 1 }}\r\n//                             label={`${item.itemsToSold} * ${item.name}`}\r\n//                           />\r\n//                         )\r\n//                       })}\r\n//                     </TableCell>\r\n//                     <TableCell align=\"left\" width={'250px'}>\r\n//                       {row.date !== 'null'\r\n//                         ? dayjs.unix(row.date).format('DD-MM-YYYY')\r\n//                         : ''}\r\n//                     </TableCell>\r\n//                     <TableCell align=\"left\">\r\n//                       {row.address !== 'null' ? row.address : ''}\r\n//                     </TableCell>\r\n//                     <TableCell align=\"left\">\r\n//                       {row.list.map((item) => {\r\n//                         item.price &&\r\n//                           (somme +=\r\n//                             item.price.replace('€', '').replace(',', '.') * 1)\r\n//                       })}\r\n//                       {somme.toFixed(2)} €\r\n//                     </TableCell>\r\n//                   </TableRow>\r\n//                 )\r\n//               })}\r\n//               {emptyRows > 0 && (\r\n//                 <TableRow\r\n//                   style={{\r\n//                     height: (dense ? 33 : 53) * emptyRows,\r\n//                   }}\r\n//                 >\r\n//                   <TableCell colSpan={6} />\r\n//                 </TableRow>\r\n//               )}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </TableContainer>\r\n//         <TablePagination\r\n//           rowsPerPageOptions={[5, 10, 20, 50]}\r\n//           component=\"div\"\r\n//           count={rows.length}\r\n//           rowsPerPage={rowsPerPage}\r\n//           page={page}\r\n//           onPageChange={handleChangePage}\r\n//           onRowsPerPageChange={handleChangeRowsPerPage}\r\n//         />\r\n//       </Paper>\r\n//       {/* <FormControlLabel\r\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n//         label=\"Dense padding\"\r\n//       /> */}\r\n//     </Box>\r\n//   )\r\n// }\r\n\r\nimport * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@mui/material/Box'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\r\nimport dayjs from 'dayjs'\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      {\r\n        date: '2020-01-05',\r\n        customerId: '11091700',\r\n        amount: 3,\r\n      },\r\n      {\r\n        date: '2020-01-02',\r\n        customerId: 'Anonymous',\r\n        amount: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props\r\n  const [open, setOpen] = React.useState(false)\r\n  let somme = 0\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.nameSociete !== 'null' ? row.nameSociete : null}\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          {row.address !== 'null' ? row.address : ''}\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          {row.phone !== 'null' ? row.phone : ''}\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          {row.email !== 'null' ? row.email : ''}\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          {dayjs.unix(row.date).format('HH:mm DD-MM-YYYY')}\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          {row.list.map((item) => {\r\n            item.price &&\r\n              (somme +=\r\n                item.price.replace('€', '').replace(',', '.') *\r\n                item.itemsToSold)\r\n          })}\r\n          {somme.toFixed(2)} €\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Produits\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Image</TableCell>\r\n                    <TableCell>Nom Produit</TableCell>\r\n                    <TableCell align=\"left\">Quantité</TableCell>\r\n                    <TableCell align=\"left\">PU</TableCell>\r\n                    <TableCell align=\"left\">Prix total</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.list.map((produit) => (\r\n                    <TableRow key={produit.id}>\r\n                      <TableCell>\r\n                        <img src={produit.image} width={'50px'} />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{produit.name}</TableCell>\r\n\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {produit.itemsToSold}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{produit.price}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {produit.price.replace('€', '').replace(',', '.') *\r\n                          produit.itemsToSold}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n// ]\r\n\r\nexport default function ListCommandes({ rows }) {\r\n  const [order, setOrder] = React.useState('asc')\r\n  const [orderBy, setOrderBy] = React.useState('nameSociete')\r\n  const [page, setPage] = React.useState(0)\r\n  const [dense, setDense] = React.useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n  const [rowsVisible, setRows] = React.useState(rows)\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Nom du société</TableCell>\r\n            <TableCell align=\"left\">Address</TableCell>\r\n            <TableCell align=\"left\">Phone</TableCell>\r\n            <TableCell align=\"left\">Email</TableCell>\r\n            <TableCell align=\"left\">Date</TableCell>\r\n            <TableCell align=\"left\">Montant</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import { Backdrop, Button, CircularProgress } from '@mui/material'\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { db } from '../../../firebase'\r\nimport ListCommandes from './ListCommandes'\r\n\r\nconst Commandes = () => {\r\n  const [productList, setProductList] = useState([])\r\n  const [product, setProduct] = useState({})\r\n  const [rowSelectionModel, setRowSelectionModel] = useState([])\r\n  const [open, setOpen] = useState(false)\r\n  const getCommandes = async () => {\r\n    //  get list of category\r\n    const querySnapshots = await getDocs(collection(db, 'Commande'))\r\n\r\n    const x = await Promise.all(\r\n      querySnapshots.docs.map(async (c) => {\r\n        return { id: c.id, ...c.data() }\r\n      })\r\n    )\r\n    setProductList(x)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommandes()\r\n  }, [])\r\n\r\n  const onEdit = (product) => {\r\n    setProduct(product)\r\n    setOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={productList.length === 0}\r\n      >\r\n        <CircularProgress color=\"success\" />\r\n      </Backdrop>\r\n\r\n      <ListCommandes\r\n        onEdit={onEdit}\r\n        rowSelectionModel={rowSelectionModel}\r\n        setRowSelectionModel={setRowSelectionModel}\r\n        rows={productList}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Commandes\r\n","import {\r\n  Box,\r\n  IconButton,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers'\r\nimport React, { useState } from 'react'\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport dayjs from 'dayjs'\r\n\r\nconst ListCommandesPerProduct = ({ commandeList }) => {\r\n  const { control, watch, setValue } = useForm({\r\n    defaultValues: { date: dayjs() },\r\n  })\r\n  const [nbCommandeProduct, setNbCommandeProduct] = useState({})\r\n  React.useEffect(() => {\r\n    var nbCommande = {}\r\n    commandeList.map((c) => {\r\n      return (\r\n        dayjs.unix(parseInt(c.date)).format('DD-MM-YYYY') ===\r\n          dayjs(watch('date')).format('DD-MM-YYYY') &&\r\n        c.list.map((item) => {\r\n          return nbCommande[item.name]\r\n            ? (nbCommande[item.name] += item.itemsToSold)\r\n            : (nbCommande[item.name] = item.itemsToSold)\r\n        })\r\n      )\r\n    })\r\n\r\n    setNbCommandeProduct(nbCommande)\r\n  }, [watch('date'), commandeList])\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Paper\r\n          sx={{\r\n            width: '100%',\r\n            mb: 2,\r\n            alignItems: 'center',\r\n            fontFamily: 'sans-serif',\r\n          }}\r\n        >\r\n          <Stack justifyContent={'center'} alignItems={'center'} pt={'30px'}>\r\n            <Stack direction={'row'}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setValue('date', dayjs(watch('date')).add(-1, 'day'))\r\n                }}\r\n              >\r\n                -\r\n              </IconButton>\r\n              <Controller\r\n                control={control}\r\n                name=\"date\"\r\n                render={({\r\n                  field: { value, onChange },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <DatePicker\r\n                      value={value}\r\n                      onChange={onChange}\r\n                      label=\"Basic date picker\"\r\n                      format=\"DD-MM-YYYY\"\r\n                    />\r\n                  )\r\n                }}\r\n              />\r\n              <IconButton\r\n                onClick={() => {\r\n                  setValue('date', dayjs(watch('date')).add(1, 'day'))\r\n                }}\r\n              >\r\n                +\r\n              </IconButton>\r\n            </Stack>\r\n            <TableContainer sx={{ width: '70%', align: 'center' }}>\r\n              <Table aria-labelledby=\"tableTitle\" size={'medium'}>\r\n                <TableHead sx={{ bgcolor: '#b8b2b2' }}>\r\n                  <TableCell sx={{ borderRadius: '30px 0 0 0' }}>\r\n                    Produit\r\n                  </TableCell>\r\n                  <TableCell sx={{ borderRadius: '0 30px 0 0' }}>\r\n                    Quantité journalière\r\n                  </TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.entries(nbCommandeProduct).map((item, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={index}\r\n                        sx={{ cursor: 'pointer' }}\r\n                      >\r\n                        <TableCell> {item[0]}</TableCell>\r\n                        <TableCell> {item[1]}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Stack>\r\n        </Paper>\r\n      </Box>\r\n    </LocalizationProvider>\r\n  )\r\n}\r\n\r\nexport default ListCommandesPerProduct\r\n","import { Backdrop, CircularProgress } from '@mui/material'\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { db } from '../../../firebase'\r\nimport ListCommandesPerProduct from './ListCommandesPerProduct'\r\n\r\nconst Fabrication = () => {\r\n  const [commandeList, setCommandeList] = useState([])\r\n\r\n  const getCommandes = async () => {\r\n    //  get list of category\r\n    const querySnapshots = await getDocs(collection(db, 'Commande'))\r\n    const x = await Promise.all(\r\n      querySnapshots.docs.map(async (c) => {\r\n        return { id: c.id, ...c.data() }\r\n      })\r\n    )\r\n    setCommandeList(x)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommandes()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={commandeList.length === 0}\r\n      >\r\n        <CircularProgress color=\"success\" />\r\n      </Backdrop>\r\n\r\n      <ListCommandesPerProduct commandeList={commandeList} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Fabrication\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\r\nimport SignIn from './Pages/SignIn'\r\nimport {\r\n  AppBarComp,\r\n  Categories,\r\n  Commandes,\r\n  Fabrication,\r\n  Products,\r\n} from './Pages/Dashboard'\r\n\r\nconst Navigation = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <AppBarComp />\r\n      {user !== null ? (\r\n        user.role === 'pa' ? (\r\n          <Routes>\r\n            <Route path=\"/\" element={<Fabrication />} />\r\n            <Route path=\"*\" element={<Fabrication />} />\r\n          </Routes>\r\n        ) : user.role === 'ad' ? (\r\n          <Routes>\r\n            <Route path=\"/\" element={<Commandes />} />\r\n            <Route path=\"/categories\" element={<Categories />} />\r\n            <Route path=\"/produits\" element={<Products />} />\r\n            <Route path=\"/fabrication\" element={<Fabrication />} />\r\n            <Route path=\"*\" element={<p>404 NotFound</p>} />\r\n          </Routes>\r\n        ) : (\r\n          user.role === 'fo' && (\r\n            <Routes>\r\n              <Route path=\"/\" element={<Commandes />} />\r\n              <Route path=\"*\" element={<Commandes />} />\r\n            </Routes>\r\n          )\r\n        )\r\n      ) : (\r\n        <Routes>\r\n          <Route path=\"*\" element={<SignIn />} />\r\n        </Routes>\r\n      )}\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport SignIn from './Pages/SignIn'\nimport Dashboard from './Pages/Dashboard'\nimport Commandes from './Pages/Dashboard/Commandes'\nimport AppBarComp from './Components/AppBar'\nimport Navigation from './Navigation'\n\nconst App = () => {\n  const user = useSelector((state) => state.user)\n  return <Navigation />\n}\n\nexport default App\n","import actionsList from './actions'\r\n\r\nconst initialState = {\r\n  user: JSON.parse(localStorage.getItem('user')) || null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionsList.auth:\r\n      return { ...state, user: action.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nexport const store = createStore(reducer)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './Redux/store'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n)\n"],"sourceRoot":""}